//import org.jetbrains.kotlin.gradle.tasks.Kotlin2JsCompile

plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
}

apply from: 'android.gradle'

kotlin {
    android()
    if (project.findProperty("device")?.toBoolean() ?: false) {
        iosArm64('ios') {
            binaries {
                framework()
            }
        }
    } else {
        iosX64('ios') {
            binaries {
                framework()
            }
        }
    }
//    js {
//        browser()
//        compilations.all {
//            tasks.withType(Kotlin2JsCompile) {
//                kotlinOptions {
//                    metaInfo = true
//                    sourceMap = true
//                    moduleKind = 'umd'
//                }
//            }
//        }
//    }
//    jvm()

    sourceSets {
        commonMain {
            dependencies {
                implementation rootProject.ext.kotlinCommon
                implementation rootProject.ext.coroutineCommon
                implementation rootProject.ext.serializationCommon
                implementation rootProject.ext.ktorClient
                implementation rootProject.ext.ktorClientJson
            }
        }
        androidMain {
            dependencies {
            }
        }
        iosMain {
            dependencies {
                implementation rootProject.ext.coroutineNative
                implementation rootProject.ext.serializationNative
                implementation rootProject.ext.ktorClientIos
                implementation rootProject.ext.ktorClientJsonIos
            }
        }
//        jsMain {
//            dependencies {
//                implementation rootProject.ext.kotlinJs
//                implementation rootProject.ext.coroutineJs
//                implementation rootProject.ext.serializationJs
//                implementation rootProject.ext.ktorClientJs
//                implementation rootProject.ext.ktorClientJsonJs
//            }
//        }
//        jvmMain {
//            dependencies {
//                implementation rootProject.ext.kotlinJvm
//                implementation rootProject.ext.coroutine
//                implementation rootProject.ext.serialization
//                implementation rootProject.ext.ktorClientJvm
//                implementation rootProject.ext.ktorClientJsonJvm
//            }
//        }
    }
}

// ios task
task packForXcode(type: Sync) {
    // Build Configuration
    def mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'
    inputs.property("mode", mode)
    // Output Framework Directory
    def targetDir = new File(buildDir, "xcode-frameworks")
    // Output Framework
    def framework = kotlin.targets.ios.compilations.main.target.binaries.findFramework("", mode)

    dependsOn framework.linkTask
    from({ framework.outputDirectory })
    into(targetDir)
    doLast {
        new File(targetDir, 'gradlew').with {
            text = "#!/bin/bash\n" +
                    "export 'JAVA_HOME=${System.getProperty("java.home")}'\n" +
                    "cd '${rootProject.rootDir}'\n" +
                    "./gradlew \$@\n"
            setExecutable(true)
        }
    }
}

tasks.build.dependsOn packForXcode